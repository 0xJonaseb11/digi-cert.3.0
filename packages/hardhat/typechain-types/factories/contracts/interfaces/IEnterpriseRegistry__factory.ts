/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEnterpriseRegistry,
  IEnterpriseRegistryInterface,
} from "../../../contracts/interfaces/IEnterpriseRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "enterprise",
        type: "address",
      },
    ],
    name: "getEnterpriseMetadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enterprise",
        type: "address",
      },
    ],
    name: "isEnterpriseRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enterprise",
        type: "address",
      },
    ],
    name: "isEnterpriseSuspended",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enterprise",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "registerEnterprise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enterprise",
        type: "address",
      },
    ],
    name: "suspendInterprise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEnterpriseRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IEnterpriseRegistryInterface {
    return new Interface(_abi) as IEnterpriseRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IEnterpriseRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IEnterpriseRegistry;
  }
}
