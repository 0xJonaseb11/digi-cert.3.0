/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AuditorOversight,
  AuditorOversightInterface,
} from "../../../contracts/modules/AuditorOversight";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rolesManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_certAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_inspectionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AuditorOversight__AppealWindowClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "AuditorOversight__CaseNotPending",
    type: "error",
  },
  {
    inputs: [],
    name: "AuditorOversight__NotAuthorizedEnterpriseOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "CertificationAuthority__EnterpriseNotCertifiedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "RolesManager__NotAuthorizedAuditor",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "caseid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "enterprise",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "counterEvidenceURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AppealFiled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "caseId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "enterprise",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inspectionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auditor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "evidenceURI",
        type: "string",
      },
    ],
    name: "AuditInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "caseId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "enterprise",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "resolvedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "upheld",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "remarks",
        type: "string",
      },
    ],
    name: "AuditResolved",
    type: "event",
  },
  {
    inputs: [],
    name: "APPEAL_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AUDIT_DEPOSIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "certAuthority",
    outputs: [
      {
        internalType: "contract CertificationAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "caseId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "counterEvidenceURI",
        type: "string",
      },
    ],
    name: "fileAppeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveAudits",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "targetEnterprise",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "inspectionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "auditor",
            type: "address",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
          {
            internalType: "string",
            name: "evidenceURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "enum DataTypes.AuditStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resolvedAt",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.AuditCase[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_targetEnterprise",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_inspectionId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
      {
        internalType: "string",
        name: "_evidenceURI",
        type: "string",
      },
    ],
    name: "initiateAudit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "inspectionManager",
    outputs: [
      {
        internalType: "contract InspectionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "caseId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "upholdDecision",
        type: "bool",
      },
      {
        internalType: "string",
        name: "remarks",
        type: "string",
      },
    ],
    name: "resolveAudit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rolesManager",
    outputs: [
      {
        internalType: "contract RolesManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516112c13803806112c183398101604081905261002f91610068565b6001600160a01b0392831660805290821660a0521660c0526100ab565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506100946020850161004c565b91506100a26040850161004c565b90509250925092565b60805160a05160c0516111cb6100f66000396000818161010a01526106c10152600081816101560152818161064301526108ab01526000818161018a015261050b01526111cb6000f3fe6080604052600436106100865760003560e01c806399eb08d61161005957806399eb08d614610144578063a3574c5b14610178578063b5242dcc146101ac578063f2130d49146101bf578063f269a21e146101e957600080fd5b806307f81bfc1461008b5780630c0715cc146100b65780636a206258146100d85780639418d50e146100f8575b600080fd5b34801561009757600080fd5b506100a0610200565b6040516100ad9190610c26565b60405180910390f35b3480156100c257600080fd5b506100d66100d1366004610d7d565b6104f6565b005b3480156100e457600080fd5b506100d66100f3366004610dd9565b6107c9565b34801561010457600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ad565b34801561015057600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561018457600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b6100d66101ba366004610e25565b61088c565b3480156101cb57600080fd5b506101db67016345785d8a000081565b6040519081526020016100ad565b3480156101f557600080fd5b506101db62093a8081565b60606000805b600154811161025a5760008181526020819052604081206007015460ff16600381111561023557610235610bee565b03610248578161024481610ed3565b9250505b8061025281610ed3565b915050610206565b5060008167ffffffffffffffff81111561027657610276610eec565b6040519080825280602002602001820160405280156102af57816020015b61029c610b32565b8152602001906001900390816102945790505b509050600060015b60015481116104ed5760008181526020819052604081206007015460ff1660038111156102e6576102e6610bee565b036104db57600081815260208181526040918290208251610140810184528154815260018201546001600160a01b03908116938201939093526002820154938101939093526003810154909116606083015260048101805460808401919061034d90610f02565b80601f016020809104026020016040519081016040528092919081815260200182805461037990610f02565b80156103c65780601f1061039b576101008083540402835291602001916103c6565b820191906000526020600020905b8154815290600101906020018083116103a957829003601f168201915b505050505081526020016005820180546103df90610f02565b80601f016020809104026020016040519081016040528092919081815260200182805461040b90610f02565b80156104585780601f1061042d57610100808354040283529160200191610458565b820191906000526020600020905b81548152906001019060200180831161043b57829003601f168201915b505050918352505060068201546020820152600782015460409091019060ff16600381111561048957610489610bee565b600381111561049a5761049a610bee565b81526008820154602082015260099091015460409091015283836104bd81610ed3565b9450815181106104cf576104cf610f3c565b60200260200101819052505b806104e581610ed3565b9150506102b7565b50909392505050565b60405163abaa536f60e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063abaa536f90602401602060405180830381865afa15801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e9190610f52565b61059b5760405163ca93e5db60e01b815260040160405180910390fd5b600084815260208190526040812090600782015460ff1660038111156105c3576105c3610bee565b146105e157604051630166e13f60e71b815260040160405180910390fd5b836105ed5760026105f0565b60015b60078201805460ff1916600183600381111561060e5761060e610bee565b0217905550426009820155831561073057600181015460405163b83cc3b360e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063b83cc3b390602401600060405180830381600087803b15801561068957600080fd5b505af115801561069d573d6000803e3d6000fd5b50505060018201546002830154604051630861159360e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169450634308ac98936106fd9391169188908890600401610f9f565b600060405180830381600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b505050505b600381015460068201546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610770573d6000803e3d6000fd5b5060018101546040516001600160a01b039091169086907f301df41f47409571451409165715dde2b276daea32c1bdb4a82853d9a845e679906107ba903390899089908990610fd1565b60405180910390a35050505050565b60008381526020819052604090206001015483906001600160a01b031633146108045760405162d93abb60e31b815260040160405180910390fd5b600084815260208190526040902060088101546108259062093a8090610ffe565b4211156108455760405163b8e8d56f60e01b815260040160405180910390fd5b60078101805460ff19166003179055604051339086907f67a062a8c0dedbbe4c7c23d0ea74b2a2f174287b28e7ccf43dc83047a9cf2fbb906107ba90889088904290611017565b60405163261e85cd60e01b81526001600160a01b0387811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063261e85cd90602401602060405180830381865afa1580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190610f52565b610933576040516308a2227760e11b815260040160405180910390fd5b6001805490600061094383610ed3565b91905055506040518061014001604052806001548152602001876001600160a01b03168152602001868152602001336001600160a01b0316815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f86018190048102820181019092528481529181019190859085908190840183828082843760009201829052509385525050346020840152506040909101908152426020808301919091526000604092830181905260018054825281835290839020845181559184015190820180546001600160a01b03199081166001600160a01b0393841617909155928401516002830155606084015160038301805490941691161790915560808201516004820190610a7b908261108a565b5060a08201516005820190610a90908261108a565b5060c0820151600682015560e082015160078201805460ff19166001836003811115610abe57610abe610bee565b021790555061010082015181600801556101208201518160090155905050856001600160a01b03166001547f1226c69d11817637190759da9257a6df1ff4bb6110f10ccf0255d12f8f5ea75e873388888888604051610b229695949392919061114a565b60405180910390a3505050505050565b6040518061014001604052806000815260200160006001600160a01b031681526020016000815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160006003811115610b9457610b94610bee565b815260200160008152602001600081525090565b6000815180845260005b81811015610bce57602081850181015186830182015201610bb2565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b60048110610c2257634e487b7160e01b600052602160045260246000fd5b9052565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610d1557888303603f19018552815180518452878101516001600160a01b03811689860152610140905081880151858901526060808301516001600160a01b0381168288015250506080808301518282880152610cb083880182610ba8565b9250505060a08083015186830382880152610ccb8382610ba8565b9250505060c080830151818701525060e080830151610cec82880182610c04565b505061010082810151908601526101209182015191909401529386019390860190600101610c4d565b509098975050505050505050565b8015158114610d3157600080fd5b50565b60008083601f840112610d4657600080fd5b50813567ffffffffffffffff811115610d5e57600080fd5b602083019150836020828501011115610d7657600080fd5b9250929050565b60008060008060608587031215610d9357600080fd5b843593506020850135610da581610d23565b9250604085013567ffffffffffffffff811115610dc157600080fd5b610dcd87828801610d34565b95989497509550505050565b600080600060408486031215610dee57600080fd5b83359250602084013567ffffffffffffffff811115610e0c57600080fd5b610e1886828701610d34565b9497909650939450505050565b60008060008060008060808789031215610e3e57600080fd5b86356001600160a01b0381168114610e5557600080fd5b955060208701359450604087013567ffffffffffffffff80821115610e7957600080fd5b610e858a838b01610d34565b90965094506060890135915080821115610e9e57600080fd5b50610eab89828a01610d34565b979a9699509497509295939492505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610ee557610ee5610ebd565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610f1657607f821691505b602082108103610f3657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610f6457600080fd5b8151610f6f81610d23565b9392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b0385168152836020820152606060408201526000610fc7606083018486610f76565b9695505050505050565b6001600160a01b03851681528315156020820152606060408201819052600090610fc79083018486610f76565b8082018082111561101157611011610ebd565b92915050565b60408152600061102b604083018587610f76565b9050826020830152949350505050565b601f82111561108557600081815260208120601f850160051c810160208610156110625750805b601f850160051c820191505b818110156110815782815560010161106e565b5050505b505050565b815167ffffffffffffffff8111156110a4576110a4610eec565b6110b8816110b28454610f02565b8461103b565b602080601f8311600181146110ed57600084156110d55750858301515b600019600386901b1c1916600185901b178555611081565b600085815260208120601f198616915b8281101561111c578886015182559484019460019091019084016110fd565b508582101561113a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8681526001600160a01b03861660208201526080604082018190526000906111759083018688610f76565b8281036060840152611188818587610f76565b999850505050505050505056fea26469706673582212200bc0e248b52ae324359d4ed64b49c11e9b289566079ff593323e22a2f500454064736f6c63430008140033";

type AuditorOversightConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuditorOversightConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuditorOversight__factory extends ContractFactory {
  constructor(...args: AuditorOversightConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _rolesManager: AddressLike,
    _certAuthority: AddressLike,
    _inspectionManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _rolesManager,
      _certAuthority,
      _inspectionManager,
      overrides || {}
    );
  }
  override deploy(
    _rolesManager: AddressLike,
    _certAuthority: AddressLike,
    _inspectionManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _rolesManager,
      _certAuthority,
      _inspectionManager,
      overrides || {}
    ) as Promise<
      AuditorOversight & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AuditorOversight__factory {
    return super.connect(runner) as AuditorOversight__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuditorOversightInterface {
    return new Interface(_abi) as AuditorOversightInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AuditorOversight {
    return new Contract(address, _abi, runner) as unknown as AuditorOversight;
  }
}
